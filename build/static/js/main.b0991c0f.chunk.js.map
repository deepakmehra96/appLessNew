{"version":3,"sources":["redux/reducers/reducer.js","redux/reducers/index.js","redux/types/index.js","redux/store.js","redux/actions/index.js","components/Spinner/index.js","container/Login/index.js","components/Chart/index.js","components/Card/HeadingCards.js","components/Headings/index.js","components/Card/TimeCards.js","components/Card/ClickThroughCards.js","components/PieChartsComp/index.js","components/Card/ChartCards.js","container/Dasboard/index.js","views/Routes.js","App/index.js","serviceWorker.js","index.js"],"names":["initialState","data","reducer","state","action","type","payload","combineReducers","reducers","store","createStore","applyMiddleware","thunk","saveData","Spinner","className","validationSchema","username","required","errorMsg","password","Login","LoadingMessage","checked","userData","errors","loading","key","event","this","target","value","setState","preventDefault","microValidator","validate","is","empty","props","dispatch","a","Promise","resolve","reject","axios","post","headers","then","res","console","log","catch","error","loginApi","status","history","push","alert","err","onSubmit","e","handleSubmit","onChange","handleChange","bind","id","placeholder","email","Row","Col","md","xs","sm","xl","name","React","Component","connect","ChartMain","barSize","handleResize","window","addEventListener","innerWidth","active","pv","uv","dataArray","graphArray","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","content","customTooltipOnYourLine","cursor","fill","HeadingCards","cardsArray","image","number","title","color","map","val","index","Card","Body","src","Title","style","Subtitle","Heading","Container","fluid","text","TimeCards","timeCardsArray","ClickThroughCards","clickCardsArray","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","sin","cos","x","y","dy","fontSize","fontWeight","textAnchor","PieChartComp","activeIndex","onPieEnter","activeShape","chartData","onMouseEnter","jsfiddleUrl","ChartCards","cardChartArray","Dashboard","get","createBrowserHistory","Routes","exact","path","component","App","setTimeout","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0991c0f.chunk.js","sourcesContent":["import { SAVE_DATA } from '../types/index'\n\nconst initialState = {\n    data: {},\n}\n\nconst reducer = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case SAVE_DATA:\n            return { ...state, data: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer","import reducer from './reducer'\n\nexport default {\n    reducer,\n}\n","export const SAVE_DATA = 'SAVE_DATA'","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nconst reducer = combineReducers(reducers)\nconst store = createStore(\n    reducer,\n    applyMiddleware(thunk)\n)\n\nexport default store\n","import axios from 'axios'\nimport { SAVE_DATA } from '../types/index';\n\n// const API_URL = 'http://209.97.142.219:3060';\n\n\nconst API_URL = 'http://localhost:3060';\n\nexport const loginApi = (data) => {\n    let endPoint = 'login';\n    return async dispatch => {\n        return new Promise(\n            (resolve, reject) =>\n                axios.post(`${API_URL}/${endPoint}`, data,{\n                    headers: {\n                        'Content-Type': 'application/json',\n                    }\n                }).then(res => {\n                    console.log(res)\n                    resolve(res)\n                })\n                .catch((error) => {\n                    console.log(error)\n\n                    reject(error)\n                })\n        )\n    }\n}\n\nexport const getData = () => {\n    let endPoint = 'getData';\n    return async dispatch => {\n        return new Promise(\n            (resolve, reject) =>\n                axios.get(`${API_URL}/${endPoint}`,{\n                    headers: {\n                        'Content-Type': 'application/json',\n                    }\n                }).then(res => {\n                    console.log(res)\n                    dispatch(saveData(res.data.data))\n                    resolve(res)\n                })\n                .catch((error) => {\n                    console.log(error)\n                    reject(error)\n                })\n        )\n    }\n}\n\n\nexport const saveData = data => {\n    return {\n        type: SAVE_DATA,\n        payload: data\n    }\n}\n","import React from 'react';\nimport './index.css';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinnerOut\">\n      <div className=\"spinner\"></div>\n    </div>\n  );\n}\n\nexport default Spinner;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap';\nimport microValidator from 'micro-validator'\nimport is from 'is_js'\nimport './index.css'\nimport { loginApi, getData } from '../../redux/actions/index';\nimport Spinner from '../../components/Spinner';\n\nlet validationSchema = {\n    username: {\n        required: {\n            errorMsg: 'username is required'\n        },\n    },\n    password: {\n        required: {\n            errorMsg: 'Password is required'\n        },\n    },\n}\n\nclass Login extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            checked: true,\n            userData: {\n                username: '',\n                password: ''\n            },\n            errors: {},\n            loading:false\n        };\n    }\n\n    handleChange(key, event) {\n        let { userData } = this.state\n        userData[key] = event.target.value\n        this.setState({ userData, errors: {} })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let { userData } = this.state\n        const errors = microValidator.validate(validationSchema, userData)\n        if (!is.empty(errors)) {\n            this.setState({ errors })\n            return\n        }\n        let data = {\n            username: userData.username,\n            password: userData.password,\n        }\n        this.setState({ loading: true })\n        this.props.dispatch(loginApi(data)).then(res => {\n            if (res.status == 200) {\n                this.props.history.push('/dashboard');\n                this.setState({ loading: false })\n            } else {\n                this.setState({ loading: false })\n                alert('Invalid Credential')\n            }\n        }).catch((err) => {\n            this.setState({ loading: false })\n            alert('Invalid Credential')\n        })\n    }\n\n    LoadingMessage = () => {\n        return (\n            <Spinner />\n        );\n    }\n       \n\n    render() {\n        let { errors, loading } = this.state\n        if (loading) return this.LoadingMessage();\n        return (\n            <div className=\"backGroundImage\">\n                <div className=\"wrapper-page\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"headingMain\">\n                                APP LESS\n                            </h2>\n                            <div className=\"container\">\n                                <h6>\n                                    Welcome Back !\n                                </h6>\n                                <p>Sign in to continue to Appless.</p>\n                                <form className=\"form-containerMain\" onSubmit={(e) => this.handleSubmit(e)}>\n                                    <div className=\"form-group\">\n                                        <label>Username</label>\n                                        <input type=\"text\" onChange={this.handleChange.bind(this, 'username')} className=\"form-control\" id=\"username\" placeholder=\"Enter Username\" />\n                                        <span className=\"errorMsg\">{errors.email && errors.email[0]}</span>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Password</label>\n                                        <input type=\"password\" onChange={this.handleChange.bind(this, 'password')} className=\"form-control\" id=\"Password\" placeholder=\"Enter Password\" />\n                                        <span className=\"errorMsg\">{errors.password && errors.password[0]}</span>\n                                    </div>\n                                    <Row className=\"btnOut\">\n                                        <Col md={6} xs={6} sm={6} xl={6} >\n                                            <div className=\"custom-control custom-checkbox\">\n                                                <label className=\"alignRow\">\n                                                    <input className=\"checkbox\" type=\"checkbox\" name=\"vehicle1\" />\n                                                    <p>Remember me</p>\n                                                </label>\n                                            </div>\n                                        </Col>\n                                        <Col md={6} xs={6} sm={6} xl={6} className=\"alignEnd\">\n                                            <button className=\"btn-primary\" type=\"submit\" value=\"Enter\">Log In</button>\n                                        </Col>\n                                    </Row>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <Col md={12} xs={12} sm={12} xl={12} className=\"bottomtext\">\n                        <p>\n                            © 2019 DRM Digital\n                        </p>\n                    </Col>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        dispatch: state.dispatch\n    })\n)(Login)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, LabelList, Legend } from 'recharts';\nimport './index.css'\n\nclass ChartMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            barSize: 10\n        };\n    }\n\n    componentDidMount(event) {\n        this.handleResize()\n        window.addEventListener('resize', () => {\n            this.handleResize()\n        });\n    }\n    handleResize() {\n        if (window.innerWidth > 767) {\n            this.setState({ barSize: 10 })\n        } else if (window.innerWidth < 767 && window.innerWidth > 500) {\n            this.setState({ barSize: 5 })\n        } else if (window.innerWidth <= 500) {\n            this.setState({ barSize: 2 })\n        }\n    }\n\n    customTooltipOnYourLine(e) {\n        if (e.active && e.payload != null && e.payload[0] != null) {\n            return (\n                <div className=\"tooTipMain\">\n                    <div className=\"headerTooTip\">\n                        <p>{e.payload[0].payload.name}</p>\n                    </div>\n                    <div className=\"tootTipText\">\n                        <p>Activation : {e.payload[0].payload.pv}</p>\n                        <p>Clicks :  {e.payload[0].payload.uv}</p>\n                    </div>\n                </div>);\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    render() {\n        let { barSize } = this.state\n        let dataArray = this.props && this.props.reducer && this.props.reducer.data && this.props.reducer.data.graphArray || []\n        return (\n            <div className=\"mainChart\">\n                <div className=\"container-chart\">\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <BarChart \n                                    width={1500} height={170} \n                                    data={dataArray}\n                                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip\n                                content={this.customTooltipOnYourLine}\n                                cursor={{ fill: 'transparent' }} />\n                            <Legend />\n                            <Bar dataKey=\"pv\" fill=\"rgb(47, 142, 224)\" barSize={barSize} />\n                            <Bar dataKey=\"uv\" fill=\"rgb(75, 187, 206)\" barSize={barSize} />\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default connect(state => state)(ChartMain)\n","import React from 'react'\nimport { Row, Card, Col } from 'react-bootstrap';\nimport './index.css'\n\nclass HeadingCards extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            cardsArray: [\n                { image: './people.png', number: '1,073,852', title: 'Impressions', color: '#4bbbce' },\n                { image: './book.png', number: '23,401', title: 'Activations', color: '#8862e0' },\n                { image: './pointer.png', number: '14,278', title: 'Clickthroughs', color: '#2f8ee0' },\n                { image: './time.png', number: '24 Seconds', title: 'Average Time Spent', color: '#f24734' },\n            ]\n        }\n    }\n\n    render() {\n        let { cardsArray } = this.state\n        return (\n            <Row className=\"cardsPositioning\">\n                {\n                    cardsArray.map((val, index) => {\n                        return (\n                            <Col xs={12} sm={12} md={6} xl={3} key={index} className=\"cardWidth\">\n                                <Card>\n                                    <Card.Body className=\"cardMain\">\n                                        <div className=\"imageOut\">\n                                            <img className=\"imageMain\" src={val.image} />\n                                        </div>\n                                        <Card.Title><h3 style={{ color: val.color }}>{val.number}</h3></Card.Title>\n                                        <Card.Subtitle><strong>{val.title}</strong></Card.Subtitle>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n        )\n    }\n}\n\nexport default HeadingCards","import React from 'react'\nimport { Container } from 'react-bootstrap';\nimport './index.css'\n\nconst Heading =  (props) => {\n        return (\n            <Container fluid>\n                <h1 className=\"headingText\">\n                    {props.text}\n                </h1>\n            </Container>\n\n        )\n}\n\nexport default Heading","import React from 'react'\nimport { Row, Card, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux'\nimport './index.css'\n\nclass TimeCards extends React.Component {\n    render() {\n        let dataArray = this.props && this.props.reducer && this.props.reducer.data && this.props.reducer.data.timeCardsArray || []\n        return (\n            <Row className=\"cardsPositioning\">\n                {\n                    dataArray.map((val, index) => {\n                        return (\n                            <Col xs={12} sm={12} md={6} xl={3} key={index} className=\"cardWidth\">\n                                <Card>\n                                    <Card.Body className=\"timeCardsMain\">\n                                        <Card.Title><h3>{val.title}</h3></Card.Title>\n                                        <Card.Subtitle><p>{val.number}</p></Card.Subtitle>\n                                        <div className=\"imageOut\">\n                                            <img className=\"imageMain\" src={val.image} />\n                                        </div>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n        )\n    }\n}\n\nexport default connect(state => state)(TimeCards)","import React from 'react'\nimport { Row, Card, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux'\nimport './index.css'\n\nclass ClickThroughCards extends React.Component {\n    render() {\n        let dataArray = this.props && this.props.reducer && this.props.reducer.data && this.props.reducer.data.clickCardsArray || []\n        return (\n            <Row className=\"cardsPositioning\">\n                {\n                    dataArray.map((val, index) => {\n                        return (\n                            <Col xs={12} sm={12} md={6} xl={3} key={index} className=\"cardWidth\">\n                                <Card>\n                                    <Card.Body className=\"ClickCardsMain\">\n                                        <Card.Title><h3>{val.number}</h3></Card.Title>\n                                        <Card.Subtitle><p>{val.title}</p></Card.Subtitle>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n        )\n    }\n}\n\nexport default connect(state => state)(ClickThroughCards)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { PieChart, Pie, ResponsiveContainer, Sector } from 'recharts';\n// import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, LabelList, Legend } from 'recharts';\nimport './index.css'\n\nconst data = [\n  { name: 'Group A', value: 400, fill: \"rgb(47, 142, 224)\" },\n  { name: 'Group B', value: 300, fill: \"rgb(75, 187, 206)\" },\n  { name: 'Group C', value: 300, fill: \"rgb(255, 140, 0)\" },\n  { name: 'Group D', value: 200, fill: \"rgb(240, 241, 244)\" }\n];\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy - 12} dy={8} fontSize={40} fontWeight={'bold'} textAnchor=\"middle\" fill={\"Black\"}>{payload.value}</text>\n      <text x={cx} y={cy + 12} dy={8} fontSize={18} fontWeight={'600'} textAnchor=\"middle\" fill={\"Black\"}>{payload.name}</text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius + 4}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={innerRadius - 5}\n        outerRadius={innerRadius - 3}\n        fill={fill}\n      />\n    </g>\n  );\n};\n\n\nclass PieChartComp extends React.Component {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/hqnrgxpj/';\n\n  state = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"graphCon\">\n        <div className=\"question\">\n          <div className=\"question-container\">\n            <PieChart width={300} height={400} >\n              <Pie\n                activeIndex={this.state.activeIndex}\n                activeShape={renderActiveShape}\n                data={this.props.chartData.data}\n                cx={130}\n                cy={150}\n                innerRadius={80}\n                outerRadius={110}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                onMouseEnter={this.onPieEnter}\n              />\n            </PieChart>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    dispatch: state.dispatch\n  })\n)(PieChartComp)","import React from 'react'\nimport { Row, Card, Col } from 'react-bootstrap';\nimport './index.css'\nimport { connect } from 'react-redux'\nimport PieChartsComp from '../PieChartsComp';\n\nclass ChartCards extends React.Component {  \n  render() {\n        let dataArray = this.props && this.props.reducer && this.props.reducer.data && this.props.reducer.data.cardChartArray || []\n        return (\n            <Row className=\"cardsPositioning\">\n                {\n                    dataArray.map((val, index) => {\n                        return (\n                            <Col xs={12} sm={12} md={6} xl={3} key={index} className=\"cardWidth\">\n                                <Card>\n\n                                <Card.Title className=\"chartTitle\"><p>{val.title}</p></Card.Title>\n\n                                    <Card.Body className=\"chartCardMain\">\n                                        <Row className=\"alignInRow\">\n                                            {\n                                                val.data.map((value, index) => {\n                                                    return (\n                                                        <Col  key={index} md={6} className=\"dataOut\">\n                                                            <h3>{value.value}%</h3>\n                                                            <p>{value.name}</p>\n                                                        </Col>\n\n                                                    )\n                                                })\n                                            }\n                                        </Row>\n                                        <PieChartsComp chartData={val}/>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n        )\n    }\n}\n\nexport default connect(state => state)(ChartCards)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ChartMain from '../../components/Chart/index'\nimport './index.css'\nimport HeadingCards from '../../components/Card/HeadingCards';\nimport Heading from '../../components/Headings';\nimport TimeCards from '../../components/Card/TimeCards';\nimport ClickThroughCards from '../../components/Card/ClickThroughCards'\nimport ChartCards from '../../components/Card/ChartCards';\nimport Spinner from '../../components/Spinner';\nimport { getData } from '../../redux/actions';\n\nclass Dashboard extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            loading: false\n        };\n    }\n    componentDidMount(){\n        this.setState({ loading: true })\n        this.props.dispatch(getData()).then(res => {\n            if (res.status == 200) {\n                this.setState({ loading: false })\n            }else{\n                this.setState({ loading: false })\n                alert('Some Error Occurs')\n            }\n        }).catch((err) => {\n            this.setState({ loading: false })\n            alert('Some Error Occurs')\n        })\n    }\n\n    LoadingMessage = () => {\n        return (\n            <Spinner />\n        );\n    }\n        \n    render() {\n        let { errors, loading } = this.state\n        if (loading) return this.LoadingMessage();\n        return (\n            <div>\n                <div className=\"backgroundColorMain\">\n                    <Container fluid className=\"containeNoMargin\">\n                        <div className=\"backgroundGradient\">\n                            <div className=\"dashBoardCon\">\n                                <div className=\"textCon\">\n                                    <h1 className=\"mainHeading\">APP LESS</h1>\n                                    <div className=\"titleText\">\n                                        <h4>Devour Gaming | August 5, 2019 - September 9, 2019</h4>\n                                    </div>\n                                </div>\n                                <Col md={12} xs={12} sm={12} xl={12} >\n                                    <ChartMain />\n                                    <Row className=\"buttonOut\">\n                                        <button className=\"buttonWhite\">\n                                            August\n                                        </button>\n                                        <button className=\"buttonBlue\">\n                                            September\n                                        </button>\n                                    </Row>\n                                </Col>\n                            </div>\n                        </div>\n                    </Container>\n                    <div className=\"wrapper\">\n                        <Container fluid className=\"containeNoMargin\">\n                            <div className=\"secondContainer\">\n                                <HeadingCards />\n                                <Heading text=\"Time Spent Breakdown\" />\n                                <TimeCards />\n                                <Heading text=\"Clickthrough Breakdown\" />\n                                <ClickThroughCards />\n                                <Heading text=\"Demographics\" />\n                                <ChartCards />\n                            </div>\n                        </Container>\n                    </div>\n\n                </div>\n                <div>\n                    <Container fluid className=\"containeNoMargin\">\n                        <div className=\"bootomTextOut\">\n                           <p>© 2019 DRM Digital</p>\n                        </div>\n                    </Container>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default connect(state => state)(Dashboard)","import React from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport Login from '../container/Login';\nimport Dashboard  from '../container/Dasboard/index'\n\nconst history = createBrowserHistory()\n\nconst Routes = () => \n    <Router history={history}>\n        <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/Dashboard\" component={Dashboard} />\n        </Switch>\n    </Router>\n\nexport default Routes","import React from 'react';\nimport { Provider } from 'react-redux'\nimport '../App.css';\nimport store from '../redux/store';\nimport Routes from '../views/Routes';\nimport Spinner from '../components/Spinner';\n\nfunction LoadingMessage() {\n  return (\n  <Spinner/>\n  );\n}\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      loading: true\n    }\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ loading: false })\n    }, 2500);\n  }\n\n  LoadingMessage = () => {\n        return (\n            <Spinner />\n        );\n    }\n   \n\n  render() {\n    let { loading } = this.state \n    if (loading) return this.LoadingMessage();\n    return (\n      <Provider store={store}>\n        <Routes />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}